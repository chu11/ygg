language: cpp

jobs:
  include:
    # Main job: g++7 on Ubuntu
    - addons:
        apt:
          packages:
            - g++-7
            - gcc-7
            - libboost-all-dev
            - libgtest-dev
      os: linux
      dist: bionic
      # This is the main job. We need all the tooling
      before_install:
        - sudo pip install cmake
        - sudo wget https://github.com/google/gtest-parallel/archive/3ca6798e2c2a06708888611bc5147bd1266f97a0.zip -O gtest-parallel.zip
        - sudo mkdir gtest-parallel
        - sudo unzip -j -d gtest-parallel gtest-parallel.zip
        - sudo cp gtest-parallel/gtest_parallel.py /usr/bin/gtest_parallel.py
        - cd "${TRAVIS_BUILD_DIR}"
        - pip install --user cpp-coveralls

      # Yes, we override this. This is just here so that the job is appropriately named
      compiler:
        - gcc
        
      install:
        - export CXX="/usr/bin/g++-7" CC="/usr/bin/gcc-7"

      # This is the main job. Build, test, report coverage
      script:
        - mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Coverage .. && make && cd test
        - travis_wait 30 python /usr/bin/gtest_parallel.py -w 2 --print_test_times ./run_tests 

      after_success:
        - cd ../.. && coveralls --root . -E '/usr/*' -E '.*gtest.*' --build-root=./build

    # Secondary job: clang 7 on Ubuntu
    - addons:
        apt:
          packages:
            - clang-7
            - llvm-7-dev
            - libboost-all-dev
            - libgtest-dev
      os: linux
      dist: bionic
      
      # In this job, we run tests against an optimized build. Install everything but coveralls
      before_install:
        - sudo pip install cmake
        - sudo wget https://github.com/google/gtest-parallel/archive/3ca6798e2c2a06708888611bc5147bd1266f97a0.zip -O gtest-parallel.zip
        - sudo mkdir gtest-parallel
        - sudo unzip -j -d gtest-parallel gtest-parallel.zip
        - sudo cp gtest-parallel/gtest_parallel.py /usr/bin/gtest_parallel.py
        - cd "${TRAVIS_BUILD_DIR}"

      # Yes, we override this. This is just here so that the job is appropriately named
      compiler:
        - clang
        
      # Travis ships a broken clang that does not find gold. Use our custom one.
      install:
        - export CXX="/usr/bin/clang++-7" CC="/usr/bin/clang-7"

      # Build and test against an optimized build
      script:
        - mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && make && cd test
        - travis_wait 30 python /usr/bin/gtest_parallel.py -w 2 --print_test_times ./run_tests 

    # Secondary job: clang 7 on Mac OS
    - addons:
        homebrew:
          packages:
            - boost
            - cmake
            
      os: osx
      osx_image: xcode11
      
      # Yes, we override this. This is just here so that the job is appropriately named
      compiler:
        - clang
        
      # Secondary job. Build only, but build everything
      script:
        - mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && make

